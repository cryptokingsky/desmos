syntax = "proto3";
package desmos.relationships.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/desmos-labs/desmos/x/relationships/types";

// Msg defines the relationships Msg service.
service Msg {
  // CreateRelationship defines a method for creating a new relationship
  rpc CreateRelationship(MsgCreateRelationship) returns (MsgCreateRelationshipResponse);

  // DeleteRelationship defines a method for deleting a relationship
  rpc RemoveRelationship(MsgDeleteRelationship) returns (MsgDeleteRelationshipResponse);

  // BlockUser defines a method for blocking a user
  rpc BlockUser(MsgBlockUser) returns (MsgBlockUserResponse);

  // UnblockUser defines a method for unblocking a user
  rpc UnblockUser(MsgUnblockUser) returns (MsgUnblockResponse);
}

// ___________________________________________________________________________________________________________________

// MsgCreateRelationship represents a message to create a relationship
// between two users on a specific subspace.
message MsgCreateRelationship {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  string receiver = 2 [(gogoproto.moretags) = "yaml:\"receiver\""];
  string subspace = 3 [(gogoproto.moretags) = "yaml:\"subspace\""];
}

// MsgCreateRelationshipResponse defines the Msg/CreateRelationship response type.
message MsgCreateRelationshipResponse {}

// ___________________________________________________________________________________________________________________

// MsgDeleteRelationship represents a message to delete the relationship
// between two users.
message MsgDeleteRelationship {
  string sender = 1 [(gogoproto.moretags) = "yaml:\"sender\""];
  string counterparty = 2 [(gogoproto.moretags) = "yaml:\"counterparty\""];
  string subspace = 3 [(gogoproto.moretags) = "yaml:\"subspace\""];
}

// MsgDeleteRelationshipResponse defines the Msg/DeleteRelationship response type.
message MsgDeleteRelationshipResponse {}

// ___________________________________________________________________________________________________________________

// MsgBlockUser represents a message to block another user specifying an
// optional reason.
message MsgBlockUser {
  string blocker = 1 [(gogoproto.moretags) = "yaml:\"blocker\""];
  string blocked = 2 [(gogoproto.moretags) = "yaml:\"blocked\""];
  string reason = 3 [(gogoproto.moretags) = "yaml:\"reason\""];
  string subspace = 4 [(gogoproto.moretags) = "yaml:\"subspace\""];
}

// MsgBlockUserResponse defines the Msg/BlockUser response type.
message MsgBlockUserResponse {}

// ___________________________________________________________________________________________________________________

// MsgUnblockUser represents a message to unblock a previously blocked user.
message MsgUnblockUser {
  string blocker = 1 [(gogoproto.moretags) = "yaml:\"blocker\""];
  string blocked = 2 [(gogoproto.moretags) = "yaml:\"blocked\""];
  string subspace = 4 [(gogoproto.moretags) = "yaml:\"subspace\""];
}

// MsgUnblockResponse defines the Msg/UnblockUser response type.
message MsgUnblockResponse {}
